{"ast":null,"code":"var _jsxFileName = \"/Users/kelsie13/Documents/GitHub/login-page/login-page/src/Components/LoginForm/LoginForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./LoginForm.css\";\nimport Card from \"../Card/Card\";\nimport { database } from \"../../utils/database\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = _ref => {\n  _s();\n  let {\n    setIsLoggedIn\n  } = _ref;\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessages, setErrorMessages] = useState({});\n  const errors = {\n    username: \"Invalid username\",\n    password: \"Invalid password\",\n    noUsername: \"Please enter your username\",\n    noPassword: \"Please enter your password\"\n  };\n  const handleSubmit = e => {\n    // Prevent page from reloading\n    e.preventDefault();\n    if (!username) {\n      // Username input is empty\n      setErrorMessages({\n        name: \"noUsername\",\n        message: errors.noUsername\n      });\n      return;\n    }\n    if (!password) {\n      // Password input is empty\n      setErrorMessages({\n        name: \"noPassword\",\n        message: errors.noPassword\n      });\n      return;\n    }\n\n    // Search for user credentials\n    const currentUser = database.find(user => user.username === username);\n    if (currentUser) {\n      if (currentUser.password !== password) {\n        // Wrong password\n        setErrorMessages({\n          name: \"password\",\n          message: errors.password\n        });\n      } else {\n        // Correct password, log in user\n        setErrorMessages({});\n        setIsLoggedIn(true);\n      }\n    } else {\n      // Username doens't exist in the database\n      setErrorMessages({\n        name: \"username\",\n        message: errors.username\n      });\n    }\n  };\n\n  // Render error messages\n  const renderErrorMsg = name => name === errorMessages.name && /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"error_msg\",\n    children: errorMessages.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"subtitle\",\n      children: \"Please log in using your username and password!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputs_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), renderErrorMsg(\"username\"), renderErrorMsg(\"noUsername\"), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), renderErrorMsg(\"password\"), renderErrorMsg(\"noPassword\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Log In\",\n        className: \"login_button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"link_container\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"\",\n        className: \"small\",\n        children: \"Forgot Password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"8DMZVOoDDjkaIRS/PPcpe2WD13E=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","Card","database","jsxDEV","_jsxDEV","LoginForm","_ref","_s","setIsLoggedIn","username","setUsername","password","setPassword","errorMessages","setErrorMessages","errors","noUsername","noPassword","handleSubmit","e","preventDefault","name","message","currentUser","find","user","renderErrorMsg","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","href","_c","$RefreshReg$"],"sources":["/Users/kelsie13/Documents/GitHub/login-page/login-page/src/Components/LoginForm/LoginForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./LoginForm.css\";\nimport Card from \"../Card/Card\";\nimport { database } from \"../../utils/database\";\n\nconst LoginForm = ({ setIsLoggedIn }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessages, setErrorMessages] = useState({});\n\n  const errors = {\n    username: \"Invalid username\",\n    password: \"Invalid password\",\n    noUsername: \"Please enter your username\",\n    noPassword: \"Please enter your password\",\n  };\n\n  const handleSubmit = (e) => {\n    // Prevent page from reloading\n    e.preventDefault();\n\n    if (!username) {\n      // Username input is empty\n      setErrorMessages({ name: \"noUsername\", message: errors.noUsername });\n      return;\n    }\n\n    if (!password) {\n      // Password input is empty\n      setErrorMessages({ name: \"noPassword\", message: errors.noPassword });\n      return;\n    }\n\n    // Search for user credentials\n    const currentUser = database.find((user) => user.username === username);\n\n    if (currentUser) {\n      if (currentUser.password !== password) {\n        // Wrong password\n        setErrorMessages({ name: \"password\", message: errors.password });\n      } else {\n        // Correct password, log in user\n        setErrorMessages({});\n        setIsLoggedIn(true);\n      }\n    } else {\n      // Username doens't exist in the database\n      setErrorMessages({ name: \"username\", message: errors.username });\n    }\n  };\n\n  // Render error messages\n  const renderErrorMsg = (name) =>\n    name === errorMessages.name && (\n      <p className=\"error_msg\">{errorMessages.message}</p>\n    );\n\n  return (\n    <Card>\n      <h1 className=\"title\">Sign In</h1>\n      <p className=\"subtitle\">\n        Please log in using your username and password!\n      </p>\n      <form onSubmit={handleSubmit}>\n        <div className=\"inputs_container\">\n          <input\n            type=\"text\"\n            placeholder=\"Username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          {renderErrorMsg(\"username\")}\n          {renderErrorMsg(\"noUsername\")}\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          {renderErrorMsg(\"password\")}\n          {renderErrorMsg(\"noPassword\")}\n        </div>\n        <input type=\"submit\" value=\"Log In\" className=\"login_button\" />\n      </form>\n      <div className=\"link_container\">\n        <a href=\"\" className=\"small\">\n          Forgot Password?\n        </a>\n      </div>\n    </Card>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,iBAAiB;AACxB,OAAOC,IAAI,MAAM,cAAc;AAC/B,SAASC,QAAQ,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,SAAS,GAAGC,IAAA,IAAuB;EAAAC,EAAA;EAAA,IAAtB;IAAEC;EAAc,CAAC,GAAAF,IAAA;EAClC,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtD,MAAMe,MAAM,GAAG;IACbN,QAAQ,EAAE,kBAAkB;IAC5BE,QAAQ,EAAE,kBAAkB;IAC5BK,UAAU,EAAE,4BAA4B;IACxCC,UAAU,EAAE;EACd,CAAC;EAED,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B;IACAA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACX,QAAQ,EAAE;MACb;MACAK,gBAAgB,CAAC;QAAEO,IAAI,EAAE,YAAY;QAAEC,OAAO,EAAEP,MAAM,CAACC;MAAW,CAAC,CAAC;MACpE;IACF;IAEA,IAAI,CAACL,QAAQ,EAAE;MACb;MACAG,gBAAgB,CAAC;QAAEO,IAAI,EAAE,YAAY;QAAEC,OAAO,EAAEP,MAAM,CAACE;MAAW,CAAC,CAAC;MACpE;IACF;;IAEA;IACA,MAAMM,WAAW,GAAGrB,QAAQ,CAACsB,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAAChB,QAAQ,KAAKA,QAAQ,CAAC;IAEvE,IAAIc,WAAW,EAAE;MACf,IAAIA,WAAW,CAACZ,QAAQ,KAAKA,QAAQ,EAAE;QACrC;QACAG,gBAAgB,CAAC;UAAEO,IAAI,EAAE,UAAU;UAAEC,OAAO,EAAEP,MAAM,CAACJ;QAAS,CAAC,CAAC;MAClE,CAAC,MAAM;QACL;QACAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;QACpBN,aAAa,CAAC,IAAI,CAAC;MACrB;IACF,CAAC,MAAM;MACL;MACAM,gBAAgB,CAAC;QAAEO,IAAI,EAAE,UAAU;QAAEC,OAAO,EAAEP,MAAM,CAACN;MAAS,CAAC,CAAC;IAClE;EACF,CAAC;;EAED;EACA,MAAMiB,cAAc,GAAIL,IAAI,IAC1BA,IAAI,KAAKR,aAAa,CAACQ,IAAI,iBACzBjB,OAAA;IAAGuB,SAAS,EAAC,WAAW;IAAAC,QAAA,EAAEf,aAAa,CAACS;EAAO;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CACpD;EAEH,oBACE5B,OAAA,CAACH,IAAI;IAAA2B,QAAA,gBACHxB,OAAA;MAAIuB,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClC5B,OAAA;MAAGuB,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAC;IAExB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACJ5B,OAAA;MAAM6B,QAAQ,EAAEf,YAAa;MAAAU,QAAA,gBAC3BxB,OAAA;QAAKuB,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BxB,OAAA;UACE8B,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,UAAU;UACtBC,KAAK,EAAE3B,QAAS;UAChB4B,QAAQ,EAAGlB,CAAC,IAAKT,WAAW,CAACS,CAAC,CAACmB,MAAM,CAACF,KAAK;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC,EACDN,cAAc,CAAC,UAAU,CAAC,EAC1BA,cAAc,CAAC,YAAY,CAAC,eAC7BtB,OAAA;UACE8B,IAAI,EAAC,UAAU;UACfC,WAAW,EAAC,UAAU;UACtBC,KAAK,EAAEzB,QAAS;UAChB0B,QAAQ,EAAGlB,CAAC,IAAKP,WAAW,CAACO,CAAC,CAACmB,MAAM,CAACF,KAAK;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC,EACDN,cAAc,CAAC,UAAU,CAAC,EAC1BA,cAAc,CAAC,YAAY,CAAC;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACN5B,OAAA;QAAO8B,IAAI,EAAC,QAAQ;QAACE,KAAK,EAAC,QAAQ;QAACT,SAAS,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC,eACP5B,OAAA;MAAKuB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7BxB,OAAA;QAAGmC,IAAI,EAAC,EAAE;QAACZ,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAC;MAE7B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAACzB,EAAA,CAtFIF,SAAS;AAAAmC,EAAA,GAATnC,SAAS;AAwFf,eAAeA,SAAS;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}